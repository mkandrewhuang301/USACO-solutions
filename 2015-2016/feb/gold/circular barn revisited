#include <bits/stdc++.h>
using namespace std;
#define lli long long int
#define f first
#define s second
#define pb push_back
#define MAXN 103
#define INF 2e9  + 5
#define mod 1000000007
#define loop(i,a,b) for  (lli i=(a); i<= (signed)(b); i++)
#define lp(i,a) for(lli i = 0;i<(signed)(a); i++)
#define rev(a) reverse(a.begin(), a.end())
#define print(a) cout<<a<<" ";
#define printl(a) cout<<a<<endl;
#define debug cout<<"I am here"<<endl;
#define rep(n) for(lli i = 0; i< n; i++)
typedef vector<lli> vi;
/*
    dp on the door locations
    dp[numdoors][position of last door]
    loop n times and roate so all have unqiue ending polli.

*/

int main()
{
    freopen("cbarn2.in","r", stdin);
    freopen("cbarn2.out", "w", stdout);
   lli n,m;
   cin>>n>>m;
   vi  a(n);
   lp(i,n)cin>>a[i];
   lli ans  =INF;
   lli dp[8][MAXN];
   lp(t, n){
      memset(dp, 0x3f, sizeof(dp));
      dp[0][n] = 0;  ///initially with zero doors, dp is zero
      for(lli numdoor = 1; numdoor <= m; numdoor++){
        for(lli newdoor = 0; newdoor< n; newdoor++){
            lli sum = 0 ;
            for(lli prevdoor = newdoor + 1; prevdoor <=n; prevdoor++){ //have lastdoor at n because could be just 1 door at 0 and all other not needed
                sum += a[prevdoor-1] * (prevdoor - newdoor -1); /// get distnace needed to move current cows to location
                dp[numdoor][newdoor] = min(dp[numdoor][newdoor], dp[numdoor -1][prevdoor] + sum);
            }
        }
      }
      ans = min(ans, dp[m][0]);
      rotate(a.begin(), a.begin()  +1, a.end());
   }
   cout<<ans<<endl;
}
